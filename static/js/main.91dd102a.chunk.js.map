{"version":3,"sources":["components/controls/ButtonsContainer.js","components/visualization/Tree.js","components/visualization/ChessBoard.js","components/visualization/treeGenerator.worker.js","components/info/InfoContainer.js","i18n/ru.js","components/forms/DepthControl.js","components/info/ProgressBar.js","components/modal/Modal.js","components/mainView/ColorScheme.js","components/mainView/MainView.js","components/header/Header.js","App.js","reportWebVitals.js","index.js"],"names":["ButtonsContainer","props","Container","className","buttons","map","button","Button","onClick","disabled","active","variant","style","text","RD3Component","rd3","Component","Tree","useState","treeDiv","setTreeDiv","useEffect","screenWidth","window","innerWidth","document","documentElement","clientWidth","body","height","innerHeight","clientHeight","width","radius","tree","d3","handleZoom","e","t","transform","select","attr","x","y","k","size","Math","PI","treeRoot","hierarchy","treeData","nodes","descendants","links","div","createElement","svg","append","g","zoom","on","call","link","selectAll","data","enter","angle","d","transition","duration","exit","remove","side","updateTree","moveTree","requestAnimationFrame","setTimeout","setShowProgressBar","ChessGame","Chessjs","treeGenerator","Worker","ChessBoard","boardPosition","setBoardPosition","depth","clear","fen","workerOnMessage","event","msg","setProgressTreeGen","Number","value","toFixed","setMoveTree","setShowTree","onSearchEnd","console","log","onSearchStart","children","postMessage","maxDepth","gameState","addEventListener","removeEventListener","chessBoardConfig","screenHeight","border","boxSizing","position","prevPosition","Object","entries","forEach","entry","put","type","toLowerCase","color","display","flexDirection","alignItems","InfoContainer","i18n","ALPHA_BETA_ALGORITHM_VISUALIZATION","FIRST_SCREEN_DESCRIPTION","GENERATING_TREE_MSG","ALPHA_BETA","MINIMAX","START_BUTTON","SEARCH_DEPTH","INVALID_DEPTH","DepthControl","Form","onSubmit","preventDefault","justifyContent","flexWrap","FormLabel","margin","lineHeight","verticalAlign","FormControl","as","isValid","isDepthValid","onChange","onDepthChange","textAlign","ProgressBar","now","progressTreeGen","Modal","centered","dialogClassName","show","onHide","Header","closeButton","Title","Body","padding","mainViewColor","MainView","algo","setAlgo","setDepth","showProgressBar","showTree","showTreeModal","setShowTreeModal","modalMsg","setModalMsg","switchAlgo","newAlgo","isSearchConditionsFulfilled","validateDepth","isNaN","parseInt","algoTranslationsList","minimax","alphaBeta","fluid","Row","Col","name","bind","background","target","fn","marginTop","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.91dd102a.chunk.js","sourcesContent":["import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport './Controls.scss';\n\nconst ButtonsContainer = (props) => {\n\treturn (\n\t\t<Container className=\"control-container\">\n\t\t\t{props.buttons.map((button) => {\n\t\t\t\treturn (<Button onClick={button.onClick} disabled={button.disabled} active={button.active} variant={button.variant || \"outline-dark\"} className=\"control-btn\" style={button.style}>{button.text}</Button>);\n\t\t\t})}\n\t\t</Container>\n\t)\n}\n\nexport default ButtonsContainer;","import React, {useEffect, useState} from 'react';\nimport * as d3 from 'd3';\nimport rd3 from 'react-d3-library';\nimport './Tree.scss';\n\nconst RD3Component = rd3.Component;\n\nconst Tree = (props) => {\n\tconst [treeDiv, setTreeDiv] = useState(null);\n\n\tuseEffect(() => {\n\t\tconst screenWidth = window.innerWidth || document.documentElement.clientWidth ||\n\t\t\tdocument.body.clientWidth;\n\t\tconst screenHeight = window.innerHeight || document.documentElement.clientHeight ||\n\t\t\tdocument.body.clientHeight;\n\t\tconst height = screenHeight;\n\t\tconst width = screenWidth;\n\t\tconst diameter = (width > height ? height : width) * 0.99;\n\t\tconst radius = diameter / 2;\n\t\tconst duration = 750;\n\t\tconst tree = d3.tree();\n\n\t\ttree.size([2 * Math.PI, radius]);\n\n\t\tfunction handleZoom(e) {\n\t\t\tconst t = e.transform;\n\t\t\tconst svg = d3.select(\".tree-container > svg\");\n\t\t\tconst g = svg.select('.tree-container > svg > g')\n\n\t\t\tg.attr(\"transform\", `translate(${t.x + width / 2},${t.y + height / 2}) scale(${t.k})`);\n\t\t}\n\n\t\tconst updateTree = (treeRoot) => {\n\t\t\tconst hierarchy = d3.hierarchy(treeRoot);\n\t\t\tconst treeData = tree(hierarchy);\n\t\t\tconst nodes = hierarchy.descendants();\n\t\t\tconst links = treeData.links();\n\n\t\t\tconst div = document.createElement('div');\n\t\t\tsetTreeDiv(div);\n\n\t\t\tconst svg = d3.select(div)\n\t\t\t\t.attr(\"class\", \"tree-container\")\n\t\t\t\t.append(\"svg\")\n\t\t\t\t.attr(\"width\", width)\n\t\t\t\t.attr(\"height\", height);\n\n\t\t\tconst g = svg.append(\"g\")\n\t\t\t\t.attr(\"stroke-opacity\", 0.4)\n\t\t\t\t.attr(\"stroke-width\", 1.5)\n\t\t\t\t.attr(\"transform\", \"translate(\"+(width/2)+\",\"+(height/2)+\")\")\n\t\t\t\t.style(\"transform-origin\", \"-50% -50% 0\");\n\n\t\t\tconst zoom = d3.zoom()\n\t\t\t\t.on('zoom', handleZoom)\n\n\t\t\tsvg.call(zoom);\n\n\t\t\tconst link = g.selectAll(\".link\")\n\t\t\t\t.data(links)\n\n\t\t\tconst linkEnter = link.enter().append(\"path\")\n\t\t\t\t.attr(\"class\", \"link\")\n\t\t\t\t.attr(\"d\", d3.linkRadial()\n\t\t\t\t\t.angle(d => d.x)\n\t\t\t\t\t.radius(d => d.y));\n\n\t\t\tlink.transition()\n\t\t\t\t.duration(duration)\n\t\t\t\t.attr(\"d\", d3.linkRadial()\n\t\t\t\t\t.angle(d => d.x)\n\t\t\t\t\t.radius(d => d.y));\n\n\t\t\tlink.exit().transition()\n\t\t\t\t.duration(duration)\n\t\t\t\t.attr(\"d\", d3.linkRadial()\n\t\t\t\t\t.angle(d => d.x)\n\t\t\t\t\t.radius(d => d.y))\n\t\t\t\t.remove();\n\n\t\t\tconst node = g.selectAll(\"circle\")\n\t\t\t\t.data(nodes);\n\n\t\t\tconst nodeEnter = node.enter().append(\"g\")\n\n\t\t\tnodeEnter.append(\"circle\")\n\t\t\t\t.attr(\"r\", 5)\n\t\t\t\t.attr(\"stroke\", function (d) {\n\t\t\t\t\treturn d.data.side === \"w\" || d.data.side === \"b\" ? \"#000\" : \"#626E98\";\n\t\t\t\t})\n\t\t\t\t.attr(\"fill\", function (d) {\n\t\t\t\t\treturn d.data.side === \"w\" ? \"#fff\" : ( d.data.side === \"b\" ? \"#000\" : \"#626E98\");\n\t\t\t\t})\n\t\t\t\t.attr(\"transform\", function (d) { return \"translate(\" + d3.pointRadial(d.x, d.y) + \")\"; });\n\n\t\t\t// nodeEnter.append(\"text\")\n\t\t\t// \t.attr(\"x\", 10)\n\t\t\t// \t.attr(\"dy\", \".35em\")\n\t\t\t// \t.attr(\"text-anchor\", \"start\")\n\t\t\t// \t.text(function(d) { return d.data.move; })\n\t\t\t// \t.style(\"fill-opacity\", 1e-6);\n\t\t\t//\n\t\t\t// const nodeUpdate = node.transition()\n\t\t\t// \t.duration(duration)\n\t\t\t// \t.attr(\"transform\", function(d) { return \"rotate(\" + (d.x - 90) + \")translate(\" + d.y + \")\"; })\n\t\t\t//\n\t\t\t// nodeUpdate.select(\"text\")\n\t\t\t// \t.style(\"fill-opacity\", 1)\n\t\t\t// \t.attr(\"transform\", function(d) { return d.x < 180 ? \"translate(0)\" : \"rotate(180)translate(-\" + (d.data.move.length + 50)  + \")\"; });\n\t\t\t//\n\t\t\t// const nodeExit = node.exit().transition()\n\t\t\t// \t.duration(duration)\n\t\t\t// \t.remove();\n\t\t\t//\n\t\t\t// nodeExit.select(\"circle\")\n\t\t\t// \t.attr(\"r\", 1e-6);\n\t\t\t//\n\t\t\t// nodeExit.select(\"text\")\n\t\t\t// \t.style(\"fill-opacity\", 1e-6);\n\t\t\t//\n\t\t\t// nodes.forEach(function(d) {\n\t\t\t// \td.x0 = d.x;\n\t\t\t// \td.y0 = d.y;\n\t\t\t// });\n\t\t};\n\n\t\tupdateTree(props.moveTree);\n\t}, [props.moveTree]);\n\n\tuseEffect(() => {\n\t\trequestAnimationFrame(() => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tprops.setShowProgressBar(false);\n\t\t\t}, 0)\n\t\t})\n\t}, []);\n\n\treturn (\n\t\t<RD3Component data={treeDiv}/>\n\t)\n}\n\nexport default Tree;","/* eslint import/no-webpack-loader-syntax: off */\nimport React, {useState, useEffect} from 'react';\nimport Chessboard from 'chessboardjsx';\nimport Chessjs from 'chess.js';\n\nimport Worker from './treeGenerator.worker';\n\nconst ChessGame = new Chessjs();\nconst treeGenerator = new Worker();\n\nconst ChessBoard = (props) => {\n\tconst [boardPosition, setBoardPosition] = useState('');\n\tconst depth = props.depth;\n\n\tuseEffect(() => {\n\t\tChessGame.clear();\n\t\tsetBoardPosition(ChessGame.fen());\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst startTreeGenerator = () => {\n\t\t\tprops.setMoveTree({ children: []});\n\t\t\tprops.setShowTree(false);\n\t\t\tprops.setProgressTreeGen(0);\n\n\t\t\ttreeGenerator.postMessage({\n\t\t\t\tmsg: 'generate',\n\t\t\t\tmaxDepth: Number(depth),\n\t\t\t\tgameState: boardPosition\n\t\t\t});\n\t\t};\n\n\t\tconst workerOnMessage = (event) => {\n\t\t\tif (event && event.data) {\n\t\t\t\tif (event.data.msg === 'progress') {\n\t\t\t\t\tprops.setProgressTreeGen(Number((event.data.value * 100).toFixed(0)));\n\t\t\t\t}\n\n\t\t\t\tif (event.data.msg === 'moveTree') {\n\t\t\t\t\tprops.setMoveTree(event.data.value);\n\t\t\t\t\tprops.setShowTree(true);\n\t\t\t\t\tprops.onSearchEnd();\n\t\t\t\t\tconsole.log(event.data.value);\n\t\t\t\t}\n\n\t\t\t\tif (event.data.msg === 'log') {\n\t\t\t\t\tconsole.log(event.data.value);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tprops.onSearchStart(startTreeGenerator);\n\n\t\ttreeGenerator.addEventListener('message', workerOnMessage);\n\n\t\treturn () => {\n\t\t\ttreeGenerator.removeEventListener('message', workerOnMessage);\n\t\t};\n\n\t}, [props, depth, boardPosition]);\n\n\tconst chessBoardConfig = {\n\t\t\"calcWidth\": ({ screenWidth, screenHeight }) =>\n\t\t\t(screenWidth || screenHeight) < 550 ? 200 : 300,\n\t\t\"position\": boardPosition,\n\t\t\"sparePieces\": true,\n\t\t\"dropOffBoard\": \"trash\",\n\t\t\"boardStyle\": {\n\t\t\tborder: \"1px solid black\",\n\t\t\tboxSizing: \"content-box\"\n\t\t},\n\t\t\"getPosition\": (position) => {\n\t\t\tsetBoardPosition((prevPosition) => {\n\t\t\t\tChessGame.clear();\n\n\t\t\t\tObject.entries(position).forEach((entry) => {\n\t\t\t\t\tChessGame.put({type: entry[1][1].toLowerCase(), color: entry[1][0]}, entry[0]);\n\t\t\t\t});\n\n\t\t\t\treturn ChessGame.fen();\n\t\t\t});\n\t\t}\n\t}\n\n\tconst chessBoardStyles = {\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"column\",\n\t\talignItems: \"center\"\n\t}\n\n\treturn (\n\t\t<div style={chessBoardStyles}>\n\t\t\t<Chessboard {...chessBoardConfig}/>\n\t\t</div>\n\t);\n}\n\nexport default ChessBoard;","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/treeGenerator.worker.c88a1ed5.worker.js\");\n}\n","import React, {useState} from 'react';\nimport Container from 'react-bootstrap/Container';\nimport './InfoContainer.scss';\n\nconst InfoContainer = (props) => {\n\treturn (\n\t\t<Container style={props.style} className=\"info-container\">\n\t\t\t<span>\n\t\t\t\t{props.text}\n\t\t\t</span>\n\t\t\t{props.children}\n\t\t</Container>\n\t);\n}\n\nexport default InfoContainer;","const i18n = {\n\tALPHA_BETA_ALGORITHM_VISUALIZATION: \"Визуализация алгоритма альфа-бета\",\n\tFIRST_SCREEN_DESCRIPTION: \"Выберите вариант алгоритма и глубину поиска, затем расставьте фигуры на доске, чтобы сгенирировать дерево ходов для этого состояния\",\n\tGENERATING_TREE_MSG: \"Построение дерева...\",\n\tALPHA_BETA: \"Альфа-бета\",\n\tMINIMAX: \"Минимакс\",\n\tSTART_BUTTON: \"Создать дерево ходов\",\n\tSEARCH_DEPTH: \"Глубина поиска:\",\n\tINVALID_DEPTH: \"Глубина поиска - целое число от 1 до 5\"\n}\n\nexport default i18n;","import React, {createRef, useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport FormLabel from 'react-bootstrap/FormLabel';\nimport i18n from \"../../i18n/ru\";\n\nconst DepthControl = (props) => {\n\tconst depthFormStyles = {\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"row\",\n\t\tjustifyContent: \"center\",\n\t\tflexWrap: \"wrap\"\n\t};\n\n\tconst depthControlInputStyles = {\n\t\twidth: 100,\n\t\tmargin: \".5rem\"\n\t};\n\n\tconst depthControlLabelStyles = {\n\t\tmargin: \".5rem\",\n\t\tlineHeight: \"31px\",\n\t\tverticalAlign: \"middle\"\n\t}\n\n\tconst depthControlErrorStyles = {\n\t\tcolor: \"red\",\n\t\twidth: \"100%\",\n\t\ttextAlign: \"center\"\n\t}\n\n\treturn (\n\t\t<Form onSubmit={(e) => {e.preventDefault()}} style={depthFormStyles}>\n\t\t\t<FormLabel style={depthControlLabelStyles}>{i18n.SEARCH_DEPTH}</FormLabel>\n\t\t\t<FormControl as=\"input\" size=\"sm\" type=\"number\" value={props.depth} isValid={props.isDepthValid} onChange={props.onDepthChange} style={depthControlInputStyles}/>\n\t\t\t{ !props.isDepthValid && (\n\t\t\t\t<div style={depthControlErrorStyles}>{i18n.INVALID_DEPTH}</div>\n\t\t\t)}\n\t\t</Form>\n\t)\n}\n\nexport default DepthControl;","import React from 'react';\nimport Container from \"react-bootstrap/Container\";\nimport ProgressBarBS from \"react-bootstrap/ProgressBar\";\n\nimport './ProgressBar.scss'\n\nconst ProgressBar = (props) => {\n\n\treturn (\n\t\t<Container className=\"progress-container\">\n\t\t\t<ProgressBarBS now={props.progressTreeGen}/>\n\t\t\t<h2>{props.progressTreeGen}%</h2>\n\t\t</Container>\n\t);\n}\n\nexport default ProgressBar;","import React from 'react';\nimport ModalBS from 'react-bootstrap/Modal';\nimport './Modal.scss';\n\nconst Modal = (props) => {\n\treturn (\n\t\t<ModalBS centered={false} dialogClassName={\"custom-modal\"} show={props.show} onHide={props.onHide}>\n\t\t\t<ModalBS.Header closeButton>\n\t\t\t\t<ModalBS.Title>{props.msg}</ModalBS.Title>\n\t\t\t</ModalBS.Header>\n\t\t\t<ModalBS.Body style={{padding: 0}}>{props.children}</ModalBS.Body>\n\t\t</ModalBS>\n\t)\n}\n\nexport default Modal;","export const mainViewColor = \"#626E98\";","import React, {useEffect, useState} from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from \"react-bootstrap/Button\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './MainView.scss';\nimport ButtonsContainer from \"../controls/ButtonsContainer\";\nimport Arrows from \"../controls/Arrows\";\nimport Tree from \"../visualization/Tree\";\nimport ChessBoard from \"../visualization/ChessBoard\";\nimport InfoContainer from \"../info/InfoContainer\";\nimport i18n from \"../../i18n/ru\";\nimport DepthControl from \"../forms/DepthControl\";\nimport ProgressBar from \"../info/ProgressBar\";\nimport Modal from '../modal/Modal';\nimport {mainViewColor} from \"./ColorScheme\";\n\nconst MainView = () => {\n\tconst [algo, setAlgo] = useState('minimax');\n\tconst [depth, setDepth] = useState(3);\n\tconst [progressTreeGen, setProgressTreeGen] = useState(0);\n\tconst [moveTree, setMoveTree] = useState({ children: []});\n\tconst [showProgressBar, setShowProgressBar] = useState(false);\n\tconst [showTree, setShowTree] = useState(false);\n\tconst [showTreeModal, setShowTreeModal] = useState(false);\n\tconst [modalMsg, setModalMsg] = useState('');\n\n\tconst switchAlgo = (newAlgo) => {\n\t\tsetAlgo(newAlgo);\n\t};\n\n\tconst isSearchConditionsFulfilled = () => {\n\t\treturn validateDepth(depth) && algo;\n\t}\n\n\tconst validateDepth = (depth) => {\n\t\treturn !Number.isNaN(parseInt(depth)) && depth < 6 && depth >= 1;\n\t};\n\n\tconst onDepthChange = (e) => {\n\t\tsetDepth(e.target.value);\n\t};\n\n\t/**\n\t * This functions will be overwritten by child component's methods\n\t * Initial values\n\t */\n\tlet onSearchStart = function () {};\n\n\tuseEffect(() => {\n\n\t}, []);\n\n\tconst algoTranslationsList = {\n\t\tminimax: i18n.MINIMAX,\n\t\talphaBeta: i18n.ALPHA_BETA\n\t};\n\n\tconst getAlgoButtonsConfig = () => {\n\t\tconst algoList = ['minimax', 'alphaBeta'];\n\n\t\treturn algoList.map((name) => {\n\t\t\treturn {\n\t\t\t\ttext: algoTranslationsList[name],\n\t\t\t\tactive: algo === name,\n\t\t\t\tonClick: switchAlgo.bind(null, name),\n\t\t\t\tstyle: {\n\t\t\t\t\tbackground: algo === name ? mainViewColor : \"initial\"\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\tconst onSearchEnd = () => {\n\t\tsetModalMsg(algoTranslationsList[algo]);\n\t}\n\n\treturn (\n\t\t<Container fluid className=\"viewer__container\">\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<Container fluid className=\"viewer__title\">\n\t\t\t\t\t\t<h2 style={{padding: \"1rem\"}}>{i18n.ALPHA_BETA_ALGORITHM_VISUALIZATION}</h2>\n\t\t\t\t\t</Container>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<Container className=\"viewer\">\n\t\t\t\t\t\t<InfoContainer text={i18n.FIRST_SCREEN_DESCRIPTION}/>\n\t\t\t\t\t\t<ButtonsContainer buttons={getAlgoButtonsConfig()}/>\n\t\t\t\t\t\t<DepthControl\n\t\t\t\t\t\t\tisDepthValid={validateDepth(depth)}\n\t\t\t\t\t\t\tdepth={depth}\n\t\t\t\t\t\t\tonDepthChange={onDepthChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ChessBoard\n\t\t\t\t\t\t\talgo={algo}\n\t\t\t\t\t\t\tdepth={depth}\n\t\t\t\t\t\t\tsetMoveTree={setMoveTree}\n\t\t\t\t\t\t\tonSearchStart={(fn) => {onSearchStart = fn} }\n\t\t\t\t\t\t\tonSearchEnd={onSearchEnd}\n\t\t\t\t\t\t\tsetShowTree={setShowTree}\n\t\t\t\t\t\t\tsetProgressTreeGen={setProgressTreeGen}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Container className=\"control-container\">\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tonSearchStart();\n\t\t\t\t\t\t\t\t\tsetShowTreeModal(true);\n\t\t\t\t\t\t\t\t\tsetShowProgressBar(true);\n\t\t\t\t\t\t\t\t\tsetModalMsg(i18n.GENERATING_TREE_MSG);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tactive={isSearchConditionsFulfilled()}\n\t\t\t\t\t\t\t\tdisabled={!isSearchConditionsFulfilled()}\n\t\t\t\t\t\t\t\tvariant={\"outline-dark\"}\n\t\t\t\t\t\t\t\tclassName=\"control-btn\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tbackground: mainViewColor,\n\t\t\t\t\t\t\t\t\tmarginTop: \"1rem\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>{i18n.START_BUTTON}</Button>\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t<Modal\n\t\t\t\t\t\t\tshow={showTreeModal}\n\t\t\t\t\t\t\tonHide={() => {setShowTreeModal(false)}}\n\t\t\t\t\t\t\tmsg={modalMsg}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ showTree &&\n\t\t\t\t\t\t\t\t<Tree moveTree={moveTree} setShowProgressBar={setShowProgressBar}/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{/*{ !showProgressBar &&*/}\n\t\t\t\t\t\t\t{/*\t<Arrows/>*/}\n\t\t\t\t\t\t\t{/*}*/}\n\t\t\t\t\t\t\t{ showProgressBar &&\n\t\t\t\t\t\t\t\t<ProgressBar progressTreeGen={progressTreeGen}/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Modal>\n\t\t\t\t\t</Container>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t);\n}\n\nexport default MainView;","import React from 'react';\n\nconst Header = () => {\n\treturn (\n\t\t<header className=\"App-header\">\n\n\t\t</header>\n\t);\n}\n\nexport default Header;","import React from 'react';\nimport './App.css';\nimport MainView from './components/mainView/MainView';\nimport Header from './components/header/Header';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <MainView/>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}